--- a/lib/strip-absolute-path.js
+++ b/lib/strip-absolute-path.js
@@ -1,14 +1,28 @@
 // unix absolute paths are also absolute on win32, so we use this for both
-const { isAbsolute, parse } = require('path').win32
+const { isAbsolute, parse, sep } = require('path').win32
 
 // returns [root, stripped]
 module.exports = path => {
   let r = ''
+  
+  // Check for drive-relative paths (e.g., C:path) that aren't considered absolute
+  const driveMatch = path.match(/^[A-Za-z]:/);
+  if (driveMatch && !isAbsolute(path)) {
+    // Block paths with .. immediately after drive letter (e.g., C:../malicious)
+    const afterDrive = path.substr(driveMatch[0].length);
+    if (afterDrive.startsWith('..' + sep) || afterDrive === '..') {
+      return ['', '']; // Return empty to indicate invalid path
+    }
+    r = driveMatch[0];
+    path = afterDrive;
+  }
+  
   while (isAbsolute(path)) {
     // windows will think that //x/y/z has a "root" of //x/y/
     const root = path.charAt(0) === '/' ? '/' : parse(path).root
     path = path.substr(root.length)
     r += root
   }
+  
   return [r, path]
 }

