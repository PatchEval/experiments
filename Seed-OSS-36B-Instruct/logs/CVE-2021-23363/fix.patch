--- a/index.js
+++ b/index.js
@@ -1,16 +1,31 @@
 'use strict'
 
-const exec = require('child_process').execSync
+const { spawnSync } = require('child_process');
 
 exports.killByPort = function (port) {
-  var processId = null
-  try {
-    processId = exec(`lsof -t -i:${port}`)
-  } catch (e) {
-
+  // Validate port is a valid number (1-65535 integer)
+  const parsedPort = Number(port);
+  if (!Number.isInteger(parsedPort) || parsedPort < 1 || parsedPort > 65535) {
+    throw new Error('Invalid port: Must be an integer between 1 and 65535');
   }
 
-  if (processId !== null) { // if exists kill
-    exec(`kill ${processId}`)
+  let processId = null;
+  try {
+    // Use spawnSync with arguments to prevent shell injection
+    const lsofResult = spawnSync('lsof', ['-t', `-i:${parsedPort}`], { encoding: 'utf8' });
+    processId = lsofResult.stdout.trim();
+  } catch (e) {
+    // Preserve original silent error handling for lsof failures
+  }
+
+  if (processId) {
+    // Split multiple PIDs (one per line from lsof) and kill each
+    const pids = processId.split('\n').filter(Boolean);
+    for (const pid of pids) {
+      const killResult = spawnSync('kill', [pid], { encoding: 'utf8' });
+      if (killResult.status !== 0) {
+        throw new Error(`Kill failed for PID ${pid}: ${killResult.stderr.trim() || 'No error message'}`);
+      }
+    }
   }
 }

