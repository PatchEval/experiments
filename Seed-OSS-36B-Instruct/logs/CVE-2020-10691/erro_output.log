[PoC RESULT]: False
[PoC MSG]:
============================== Run PoC ==============================
------------------------------ Standard Output ------------------------------
============================= test session starts ==============================
platform linux -- Python 3.8.20, pytest-8.3.5, pluggy-1.5.0
rootdir: /workspace/ansible
collected 1 item

test/units/galaxy/test_collection.py F                                   [100%]

=================================== FAILURES ===================================
______________________ test_extract_tar_file_outside_dir _______________________

tmp_path_factory = TempPathFactory(_given_basetemp=None, _trace=<pluggy._tracing.TagTracerSub object at 0x7f61976d37f0>, _basetemp=PosixPath('/tmp/pytest-of-root/pytest-2'), _retention_count=3, _retention_policy='all')

    def test_extract_tar_file_outside_dir(tmp_path_factory):
        filename = u'ÅÑŚÌβŁÈ'
        temp_dir = to_bytes(tmp_path_factory.mktemp('test-%s Collections' % to_native(filename)))
        tar_file = os.path.join(temp_dir, to_bytes('%s.tar.gz' % filename))
        data = os.urandom(8)
    
        tar_filename = '../%s.sh' % filename
        with tarfile.open(tar_file, 'w:gz') as tfile:
            b_io = BytesIO(data)
            tar_info = tarfile.TarInfo(tar_filename)
            tar_info.size = len(data)
            tar_info.mode = 0o0644
            tfile.addfile(tarinfo=tar_info, fileobj=b_io)
    
        expected = re.escape("Cannot extract tar entry '%s' as it will be placed outside the collection directory"
                             % to_native(tar_filename))
        with tarfile.open(tar_file, 'r') as tfile:
            with pytest.raises(AnsibleError, match=expected):
>               collection._extract_tar_file(tfile, tar_filename, os.path.join(temp_dir, to_bytes(filename)), temp_dir)

test/units/galaxy/test_collection.py:587: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

tar = <tarfile.TarFile object at 0x7f6196e95040>, filename = '../ÅÑŚÌβŁÈ.sh'
b_dest = b'/tmp/pytest-of-root/pytest-2/test-\xc3\x85\xc3\x91\xc5\x9a\xc3\x8c\xce\xb2\xc5\x81\xc3\x88 Collections0/\xc3\x85\xc3\x91\xc5\x9a\xc3\x8c\xce\xb2\xc5\x81\xc3\x88'
b_temp_path = b'/tmp/pytest-of-root/pytest-2/test-\xc3\x85\xc3\x91\xc5\x9a\xc3\x8c\xce\xb2\xc5\x81\xc3\x88 Collections0'
expected_hash = None

    def _extract_tar_file(tar, filename, b_dest, b_temp_path, expected_hash=None):
        n_filename = to_native(filename, errors='surrogate_or_strict')
        try:
            member = tar.getmember(n_filename)
        except KeyError:
            raise AnsibleError("Collection tar at '%s' does not contain the expected file '%s'." % (to_native(tar.name),
                                                                                                    n_filename))
    
        with tempfile.NamedTemporaryFile(dir=b_temp_path, delete=False) as tmpfile_obj:
            bufsize = 65536
            sha256_digest = sha256()
            with _tarfile_extract(tar, member) as tar_obj:
                data = tar_obj.read(bufsize)
                while data:
                    tmpfile_obj.write(data)
                    tmpfile_obj.flush()
                    sha256_digest.update(data)
                    data = tar_obj.read(bufsize)
    
            actual_hash = sha256_digest.hexdigest()
    
            if expected_hash and actual_hash != expected_hash:
                raise AnsibleError("Checksum mismatch for '%s' inside collection at '%s'"
                                   % (n_filename, to_native(tar.name)))
    
            b_dest_filepath = os.path.join(b_dest, to_bytes(filename, errors='surrogate_or_strict'))
    
            # Validate path is within destination directory to prevent path traversal
            abs_dest = os.path.abspath(b_dest)
            abs_dest_filepath = os.path.abspath(b_dest_filepath)
>           if not abs_dest_filepath.startswith(abs_dest + os.path.sep):
E           TypeError: can't concat str to bytes

lib/ansible/galaxy/collection.py:939: TypeError
=============================== warnings summary ===============================
../PoC_env/CVE-2020-10691/lib/python3.8/site-packages/_yaml/__init__.py:18
  /workspace/PoC_env/CVE-2020-10691/lib/python3.8/site-packages/_yaml/__init__.py:18: DeprecationWarning: The _yaml extension module is now located at yaml._yaml and its location is subject to change.  To use the LibYAML-based parser and emitter, import from `yaml`: `from yaml import CLoader as Loader, CDumper as Dumper`.
    warnings.warn(

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED test/units/galaxy/test_collection.py::test_extract_tar_file_outside_dir
========================= 1 failed, 1 warning in 0.40s =========================

------------------------------ Standard Error ------------------------------
WARNING: Excluding tests marked "cloud/fallaxy" which require the "docker" command: ansible-galaxy-collection
WARNING: All targets skipped.

------------------------------ Finish Evaluation ------------------------------


[UnitTest RESULT]: None
[UnitTest MSG]:
 None

[Validation TYPE]: validation_fail