--- a/lib/ansible/galaxy/collection.py
+++ b/lib/ansible/galaxy/collection.py
@@ -185,7 +185,13 @@
                     _extract_tar_file(collection_tar, file_name, b_collection_path, b_temp_path,
                                       expected_hash=file_info['chksum_sha256'])
                 else:
-                    os.makedirs(os.path.join(b_collection_path, to_bytes(file_name, errors='surrogate_or_strict')))
+                    b_dir_path = os.path.join(b_collection_path, to_bytes(file_name, errors='surrogate_or_strict'))
+                    # Validate path is within collection directory to prevent path traversal
+                    abs_collection = os.path.abspath(b_collection_path)
+                    abs_dir_path = os.path.abspath(b_dir_path)
+                    if not abs_dir_path.startswith(abs_collection + os.path.sep):
+                        raise AnsibleError(f"Path traversal attempt detected in directory '{to_text(file_name)}'")
+                    os.makedirs(b_dir_path)
 
     def set_latest_version(self):
         self.versions = set([self.latest_version])
@@ -926,6 +932,13 @@
                                % (n_filename, to_native(tar.name)))
 
         b_dest_filepath = os.path.join(b_dest, to_bytes(filename, errors='surrogate_or_strict'))
+        
+        # Validate path is within destination directory to prevent path traversal
+        abs_dest = os.path.abspath(b_dest)
+        abs_dest_filepath = os.path.abspath(b_dest_filepath)
+        if not abs_dest_filepath.startswith(abs_dest + os.path.sep):
+            raise AnsibleError(f"Path traversal attempt detected in file '{to_text(filename)}'")
+        
         b_parent_dir = os.path.split(b_dest_filepath)[0]
         if not os.path.exists(b_parent_dir):
             # Seems like Galaxy does not validate if all file entries have a corresponding dir ftype entry. This check

