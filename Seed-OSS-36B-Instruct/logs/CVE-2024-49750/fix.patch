--- a/src/snowflake/connector/auth/_auth.py
+++ b/src/snowflake/connector/auth/_auth.py
@@ -243,7 +243,7 @@
 
         logger.debug(
             "body['data']: %s",
-            {k: v for (k, v) in body["data"].items() if k != "PASSWORD"},
+            {k: v for (k, v) in body["data"].items() if k not in ("PASSWORD", "PASSCODE")},
         )
 
         try:

--- a/src/snowflake/connector/secret_detector.py
+++ b/src/snowflake/connector/secret_detector.py
@@ -33,14 +33,14 @@
         flags=re.IGNORECASE,
     )
     PRIVATE_KEY_PATTERN = re.compile(
-        r"-----BEGIN PRIVATE KEY-----\\n([a-z0-9/+=\\n]{32,})\\n-----END PRIVATE KEY-----",
+        r"-----BEGIN PRIVATE KEY-----\n([a-z0-9/+=\\n]{32,})\n-----END PRIVATE KEY-----",
         flags=re.MULTILINE | re.IGNORECASE,
     )
     PRIVATE_KEY_DATA_PATTERN = re.compile(
         r'"privateKeyData": "([a-z0-9/+=\\n]{10,})"', flags=re.MULTILINE | re.IGNORECASE
     )
     CONNECTION_TOKEN_PATTERN = re.compile(
-        r"(token|assertion content)" r"([\'\"\s:=]+)" r"([a-z0-9=/_\-\+]{8,})",
+        r"(token|assertion content)" r"([\'\"\s:=]+)" r"([a-zA-Z0-9_\-+=]+\.[a-zA-Z0-9_\-+=]+\.[a-zA-Z0-9_\-+=]+)",
         flags=re.IGNORECASE,
     )
 
@@ -75,7 +75,7 @@
     @staticmethod
     def mask_private_key(text: str) -> str:
         return SecretDetector.PRIVATE_KEY_PATTERN.sub(
-            "-----BEGIN PRIVATE KEY-----\\\\nXXXX\\\\n-----END PRIVATE KEY-----", text
+            r"-----BEGIN PRIVATE KEY-----\nXXXX\n-----END PRIVATE KEY-----", text
         )
 
     @staticmethod

