[PoC RESULT]: False
[PoC MSG]:
============================== Run PoC ==============================
------------------------------ Standard Output ------------------------------
<empty>
------------------------------ Standard Error ------------------------------
FAIL poc/reduce-css-calc.command-exec.test.js (5.171 s)
  ✕ Arbitrary code execution should NOT create files (fix should make this pass) (5001 ms)

  ● Arbitrary code execution should NOT create files (fix should make this pass)

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      50 |
      51 |     // 2) expectation: file should NOT be created (fix -> test passes)
    > 52 |     expect(existsAfter).toBe(false);
         |                         ^
      53 |
      54 |     done();
      55 |   }

      at Timeout.toBe [as _onTimeout] (poc/reduce-css-calc.command-exec.test.js:52:25)

  ● Arbitrary code execution should NOT create files (fix should make this pass)

    thrown: "Exceeded timeout of 5000 ms for a test while waiting for `done()` to be called.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

      3 | const pathStr = './reduce-css-calc';
      4 |
    > 5 | test('Arbitrary code execution should NOT create files (fix should make this pass)', (done) => {
        | ^
      6 |   expect.assertions(2);
      7 |
      8 |   // cleanup before test

      at Object.test (poc/reduce-css-calc.command-exec.test.js:5:1)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 1 total
Snapshots:   0 total
Time:        5.2 s
Ran all test suites matching /.\/poc/i.
Force exiting Jest: Have you considered using `--detectOpenHandles` to detect async operations that kept running after all tests finished?

------------------------------ Finish Evaluation ------------------------------


[UnitTest RESULT]: None
[UnitTest MSG]:
 None

[Validation TYPE]: validation_fail