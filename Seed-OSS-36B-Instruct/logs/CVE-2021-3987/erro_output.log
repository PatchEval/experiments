[PoC RESULT]: False
[PoC MSG]:
============================== Run PoC ==============================
------------------------------ Standard Output ------------------------------
<empty>
------------------------------ Standard Error ------------------------------
/workspace/calibre-web/cps/ub.py:556: RemovedIn20Warning: Deprecated API features detected! These feature(s) are not compatible with SQLAlchemy 2.0. To prevent incompatible upgrades prior to updating applications, ensure requirements files are pinned to "sqlalchemy<2.0". Set environment variable SQLALCHEMY_WARN_20=1 to show all deprecation warnings.  Set environment variable SQLALCHEMY_SILENCE_UBER_WARNING=1 to silence this message. (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)
  conn.execute("insert into registration (domain, allow) values('%.%',1)")
.hand_test.py:77: UserWarning: The name 'shelf' is already registered for this blueprint. Use 'name=' to provide a unique name. This will become an error in Flask 2.1.
  self.app.register_blueprint(shelf)
hand_test.py:78: UserWarning: The name 'web' is already registered for this blueprint. Use 'name=' to provide a unique name. This will become an error in Flask 2.1.
  self.app.register_blueprint(web) # For the redirect target
E
======================================================================
ERROR: test_create_shelf_without_permission_verifies_patch (__main__.TestShelfPatch)
Tests that a user WITHOUT permission is blocked, verifying the patch.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/root/miniconda3/envs/py_38/lib/python3.8/unittest/mock.py", line 1325, in patched
    return func(*newargs, **newkeywargs)
  File "hand_test.py", line 116, in test_create_shelf_without_permission_verifies_patch
    response = c.post('/shelf/create', follow_redirects=False)
  File "/workspace/PoC_env/CVE-2021-3987/lib/python3.8/site-packages/werkzeug/test.py", line 1136, in post
    return self.open(*args, **kw)
  File "/workspace/PoC_env/CVE-2021-3987/lib/python3.8/site-packages/flask/testing.py", line 235, in open
    return super().open(
  File "/workspace/PoC_env/CVE-2021-3987/lib/python3.8/site-packages/werkzeug/test.py", line 1076, in open
    response = self.run_wsgi_app(request.environ, buffered=buffered)
  File "/workspace/PoC_env/CVE-2021-3987/lib/python3.8/site-packages/werkzeug/test.py", line 945, in run_wsgi_app
    rv = run_wsgi_app(self.application, environ, buffered=buffered)
  File "/workspace/PoC_env/CVE-2021-3987/lib/python3.8/site-packages/werkzeug/test.py", line 1233, in run_wsgi_app
    app_rv = app(environ, start_response)
  File "/workspace/PoC_env/CVE-2021-3987/lib/python3.8/site-packages/flask/app.py", line 2091, in __call__
    return self.wsgi_app(environ, start_response)
  File "/workspace/calibre-web/cps/reverseproxy.py", line 79, in __call__
    return self.app(environ, start_response)
  File "/workspace/calibre-web/cps/reverseproxy.py", line 79, in __call__
    return self.app(environ, start_response)
  File "/workspace/PoC_env/CVE-2021-3987/lib/python3.8/site-packages/flask/app.py", line 2076, in wsgi_app
    response = self.handle_exception(e)
  File "/workspace/PoC_env/CVE-2021-3987/lib/python3.8/site-packages/flask/app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "/workspace/PoC_env/CVE-2021-3987/lib/python3.8/site-packages/flask/app.py", line 1519, in full_dispatch_request
    return self.finalize_request(rv)
  File "/workspace/PoC_env/CVE-2021-3987/lib/python3.8/site-packages/flask/app.py", line 1538, in finalize_request
    response = self.make_response(rv)
  File "/workspace/PoC_env/CVE-2021-3987/lib/python3.8/site-packages/flask/app.py", line 1723, in make_response
    raise TypeError(
  File "/workspace/PoC_env/CVE-2021-3987/lib/python3.8/site-packages/flask/app.py", line 1721, in make_response
    rv = self.response_class.force_type(rv, request.environ)  # type: ignore  # noqa: B950
  File "/workspace/PoC_env/CVE-2021-3987/lib/python3.8/site-packages/werkzeug/wrappers/response.py", line 264, in force_type
    response = Response(*run_wsgi_app(response, environ))
  File "/workspace/PoC_env/CVE-2021-3987/lib/python3.8/site-packages/werkzeug/test.py", line 1263, in run_wsgi_app
    status, headers = response  # type: ignore
TypeError: cannot unpack non-iterable NoneType object
The view function did not return a valid response. The return type must be a string, dict, tuple, Response instance, or WSGI callable, but it was a MagicMock.

----------------------------------------------------------------------
Ran 2 tests in 1.774s

FAILED (errors=1)

------------------------------ Finish Evaluation ------------------------------


[UnitTest RESULT]: None
[UnitTest MSG]:
 None

[Validation TYPE]: validation_fail