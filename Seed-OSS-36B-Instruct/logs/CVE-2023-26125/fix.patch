--- a/gin.go
+++ b/gin.go
@@ -668,12 +668,20 @@
 func redirectTrailingSlash(c *Context) {
 	req := c.Request
 	p := req.URL.Path
-	if prefix := path.Clean(c.Request.Header.Get("X-Forwarded-Prefix")); prefix != "." {
-		prefix = url.QueryEscape(prefix)
-		prefix = strings.ReplaceAll(prefix, "%2F", "/")
-
-		p = prefix + "/" + req.URL.Path
-	}
+
+	// Get and validate X-Forwarded-Prefix header
+	if prefixHeader := c.Request.Header.Get("X-Forwarded-Prefix"); prefixHeader != "" {
+		// URL-decode the prefix to handle encoded characters
+		decodedPrefix, err := url.QueryUnescape(prefixHeader)
+		if err == nil {
+			cleanedPrefix := path.Clean(decodedPrefix)
+			// Validate: must be absolute path, no directory traversal, not "."
+			if strings.HasPrefix(cleanedPrefix, "/") && !strings.Contains(cleanedPrefix, "../") && cleanedPrefix != "." {
+				p = cleanedPrefix + "/" + req.URL.Path
+			}
+		}
+	}
+
 	req.URL.Path = p + "/"
 	if length := len(p); length > 1 && p[length-1] == '/' {
 		req.URL.Path = p[:length-1]

