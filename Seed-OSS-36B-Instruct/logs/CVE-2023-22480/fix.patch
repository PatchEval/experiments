--- a/pkg/router/v1/v1api.go
+++ b/pkg/router/v1/v1api.go
@@ -19,19 +19,22 @@
 
 func V1(parent iris.Party) {
 	v1 := parent.Party("/v1")
-	authParty := v1.Party("/auth")
-	mvc.New(authParty.Party("/session")).HandleError(ErrorHandler).Handle(controller.NewSessionController())
-	mvc.New(v1.Party("/user")).HandleError(ErrorHandler).Handle(controller.NewForgotPasswordController())
+	
+	// Create AuthScope first with all security middleware
 	AuthScope = v1.Party("/")
 	AuthScope.Use(middleware.JWTMiddleware().Serve)
 	AuthScope.Use(middleware.UserMiddleware)
 	AuthScope.Use(middleware.RBACMiddleware())
 	AuthScope.Use(middleware.PagerMiddleware)
 	AuthScope.Use(middleware.ForceMiddleware)
+	
+	// Register all protected routes under AuthScope
+	mvc.New(AuthScope.Party("/auth/session")).HandleError(ErrorHandler).Handle(controller.NewSessionController())
+	mvc.New(AuthScope.Party("/user")).HandleError(ErrorHandler).Handle(controller.NewForgotPasswordController())
+	mvc.New(AuthScope.Party("/users")).HandleError(ErrorHandler).Handle(controller.NewUserController())
 	mvc.New(AuthScope.Party("/clusters")).HandleError(ErrorHandler).Handle(controller.NewClusterController())
 	mvc.New(AuthScope.Party("/credentials")).HandleError(ErrorHandler).Handle(controller.NewCredentialController())
 	mvc.New(AuthScope.Party("/hosts")).HandleError(ErrorHandler).Handle(controller.NewHostController())
-	mvc.New(AuthScope.Party("/users")).HandleError(ErrorHandler).Handle(controller.NewUserController())
 	mvc.New(AuthScope.Party("/dashboard")).HandleError(ErrorHandler).Handle(controller.NewKubePiController())
 	mvc.New(AuthScope.Party("/regions")).HandleError(ErrorHandler).Handle(controller.NewRegionController())
 	mvc.New(AuthScope.Party("/zones")).HandleError(ErrorHandler).Handle(controller.NewZoneController())
@@ -48,7 +51,7 @@
 	mvc.New(AuthScope.Party("/clusters/monitor")).HandleError(ErrorHandler).Handle(controller.NewMonitorController())
 	mvc.New(AuthScope.Party("/tasks")).Handle(ErrorHandler).Handle(controller.NewTaskLogController())
 	mvc.New(AuthScope.Party("/components")).Handle(ErrorHandler).Handle(controller.NewComponentController())
-	mvc.New(AuthScope.Party("/license")).Handle(ErrorHandler).Handle(controller.NewLicenseController())
+	mvc.New(AuthScope.Party("/license")).HandleError(ErrorHandler).Handle(controller.NewLicenseController())
 	mvc.New(AuthScope.Party("/clusters/backup/files")).HandleError(ErrorHandler).Handle(controller.NewClusterBackupFileController())
 	mvc.New(AuthScope.Party("/clusters/velero/{cluster}/{operate}")).HandleError(ErrorHandler).Handle(controller.NewClusterVeleroBackupController())
 	mvc.New(AuthScope.Party("/manifests")).HandleError(ErrorHandler).Handle(controller.NewManifestController())
@@ -66,11 +69,12 @@
 	mvc.New(AuthScope.Party("/msg/subscribes")).HandleError(ErrorHandler).Handle(controller.NewMessageSubscribeController())
 	mvc.New(AuthScope.Party("/user/messages")).HandleError(ErrorHandler).Handle(controller.NewUserMsgController())
 	mvc.New(AuthScope.Party("/user/settings")).HandleError(ErrorHandler).Handle(controller.NewUserSettingController())
+
+	// Create WhiteScope for truly public endpoints only
 	WhiteScope = v1.Party("/")
 	WhiteScope.Get("/clusters/kubeconfig/{name}", downloadKubeconfig)
 	WhiteScope.Get("/captcha", generateCaptcha)
 	mvc.New(WhiteScope.Party("/theme")).HandleError(ErrorHandler).Handle(controller.NewThemeController())
-
 }
 
 func ErrorHandler(ctx context.Context, err error) {

