[PoC RESULT]: False
[PoC MSG]:
============================== Run PoC ==============================
------------------------------ Standard Output ------------------------------
TAP version 13
# Subtest: basic race
    ok 1 - file starts right away
    not ok 2 - link waits
      ---
      at:
        line: 61
        column: 5
        file: test/path-reservations.js
        type: Test
      stack: |
        Test.<anonymous> (test/path-reservations.js:61:5)
        Object.<anonymous> (test/path-reservations.js:13:3)
      source: |2
          t.ok(reserve(['a/b/c/d'], file), 'file starts right away')
          t.notOk(reserve(['a/B/c////D', 'a/b/e'], link), 'link waits')
        ----^
          t.notOk(reserve(['a/b/e/f'], dir), 'dir waits')
          t.notOk(reserve(['a/b'], dir2), 'dir2 waits')
      ...
    
    not ok 3 - dir waits
      ---
      at:
        line: 62
        column: 5
        file: test/path-reservations.js
        type: Test
      stack: |
        Test.<anonymous> (test/path-reservations.js:62:5)
        Object.<anonymous> (test/path-reservations.js:13:3)
      source: |2
          t.notOk(reserve(['a/B/c////D', 'a/b/e'], link), 'link waits')
          t.notOk(reserve(['a/b/e/f'], dir), 'dir waits')
        ----^
          t.notOk(reserve(['a/b'], dir2), 'dir2 waits')
          t.notOk(reserve(['a/b/x'], dir3), 'dir3 waits')
      ...
    
    not ok 4 - dir2 waits
      ---
      at:
        line: 63
        column: 5
        file: test/path-reservations.js
        type: Test
      stack: |
        Test.<anonymous> (test/path-reservations.js:63:5)
        Object.<anonymous> (test/path-reservations.js:13:3)
      source: |2
          t.notOk(reserve(['a/b/e/f'], dir), 'dir waits')
          t.notOk(reserve(['a/b'], dir2), 'dir2 waits')
        ----^
          t.notOk(reserve(['a/b/x'], dir3), 'dir3 waits')
        })
      ...
    
    not ok 5 - dir3 waits
      ---
      at:
        line: 64
        column: 5
        file: test/path-reservations.js
        type: Test
      stack: |
        Test.<anonymous> (test/path-reservations.js:64:5)
        Object.<anonymous> (test/path-reservations.js:13:3)
      source: |2
          t.notOk(reserve(['a/b'], dir2), 'dir2 waits')
          t.notOk(reserve(['a/b/x'], dir3), 'dir3 waits')
        ----^
        })
      ...
    
    not ok 6 - test unfinished
      ---
      stack: |
        Object.<anonymous> (test/path-reservations.js:13:3)
      test: basic race
      at:
        line: 13
        column: 3
        file: test/path-reservations.js
        function: Object.<anonymous>
      source: |
      
        t.test('basic race', t => {
        --^
          // simulate the race conditions we care about
          let didFile = false
      ...
    
    1..6
    # failed 5 of 6 tests
not ok 1 - basic race # time=31.547ms

# "unicode shenanigans" has `only` set but all tests run
not ok 2 - child test left in queue: t.test unicode shenanigans
# "absolute paths and trailing slash" has `only` set but all tests run
not ok 3 - child test left in queue: t.test absolute paths and trailing slash
# "on windows, everything collides with everything" has `only` set but all tests run
not ok 4 - child test left in queue: t.test on windows, everything collides with everything
1..1
# test count(4) != plan(1)
# failed 4 of 4 tests
# time=34.005ms

------------------------------ Finish Evaluation ------------------------------


[UnitTest RESULT]: None
[UnitTest MSG]:
 None

[Validation TYPE]: validation_fail