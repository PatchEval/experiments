--- a/pkg/api/plugins.go
+++ b/pkg/api/plugins.go
@@ -292,6 +292,24 @@
 	requestedFile := filepath.Clean(web.Params(c.Req)["*"])
 	pluginFilePath := filepath.Join(plugin.PluginDir, requestedFile)
 
+	// Resolve absolute paths for security validation
+	pluginDirAbs, err := filepath.Abs(plugin.PluginDir)
+	if err != nil {
+		c.JsonApiErr(500, "Could not resolve plugin directory", err)
+		return
+	}
+	pluginFilePathAbs, err := filepath.Abs(pluginFilePath)
+	if err != nil {
+		c.JsonApiErr(500, "Could not resolve plugin file path", err)
+		return
+	}
+
+	// Prevent directory traversal by enforcing plugin directory boundary
+	if !strings.HasPrefix(pluginFilePathAbs, pluginDirAbs+string(os.PathSeparator)) {
+		c.JsonApiErr(403, "Access to plugin file is forbidden", nil)
+		return
+	}
+
 	if !plugin.IncludedInSignature(requestedFile) {
 		hs.log.Warn("Access to requested plugin file will be forbidden in upcoming Grafana versions as the file "+
 			"is not included in the plugin signature", "file", requestedFile)

