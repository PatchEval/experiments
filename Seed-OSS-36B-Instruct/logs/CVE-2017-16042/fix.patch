--- a/lib/growl.js
+++ b/lib/growl.js
@@ -200,7 +200,7 @@
         if (!options.sticky) args.push('--hint=int:transient:1');
         break;
       case 'Windows':
-        args.push(cmd.icon + quote(image));
+        args.push(cmd.icon, quote(image));
         break;
     }
   }
@@ -211,20 +211,19 @@
   // priority
   if (options.priority) {
     var priority = options.priority + '';
-    var checkindexOf = cmd.priority.range.indexOf(priority);
     if (~cmd.priority.range.indexOf(priority)) {
-      args.push(cmd.priority, options.priority);
-    }
-  }
-
-  //sound
+      args.push(cmd.priority, quote(priority));
+    }
+  }
+
+  // sound
   if(options.sound && cmd.type === 'Darwin-NotificationCenter'){
-    args.push(cmd.sound, options.sound)
+    args.push(cmd.sound, quote(options.sound))
   }
 
   // name
   if (options.name && cmd.type === "Darwin-Growl") {
-    args.push('--name', options.name);
+    args.push('--name', quote(options.name));
   }
 
   switch(cmd.type) {
@@ -256,7 +255,7 @@
       args.push(quote(msg).replace(/\\n/g, '\n'));
       if (options.title) args.push(quote(options.title));
       if (cmd.host) {
-        args.push(cmd.host.cmd, cmd.host.hostname)
+        args.push(cmd.host.cmd, quote(cmd.host.hostname))
       }
       break;
     case 'Linux':
@@ -270,21 +269,15 @@
       break;
     case 'Windows':
       args.push(quote(msg).replace(/\\n/g, '\n'));
-      if (options.title) args.push(cmd.title + quote(options.title));
-      if (options.url) args.push(cmd.url + quote(options.url));
+      if (options.title) args.push(cmd.title, quote(options.title));
+      if (options.url) args.push(cmd.url, quote(options.url));
       break;
     case 'Custom':
-      args[0] = (function(origCommand) {
-        var message = options.title
-          ? options.title + ': ' + msg
-          : msg;
-        var command = origCommand.replace(/(^|[^%])%s/g, '$1' + quote(message));
-        if (command === origCommand) args.push(quote(message));
-        return command;
-      })(args[0]);
+      var message = options.title ? options.title + ': ' + msg : msg;
+      args = [options.exec, quote(message)];
       break;
   }
 
   // execute
-  exec(args.join(' '), fn);
+  exec(args, fn);
 };

