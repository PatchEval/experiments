--- a/notebook/base/handlers.py
+++ b/notebook/base/handlers.py
@@ -908,8 +908,23 @@
 
     def get(self):
         sep = '&' if '?' in self._url else '?'
-        url = sep.join([self._url, self.request.query])
-        self.redirect(url, permanent=self._permanent)
+        target_url = sep.join([self._url, self.request.query])
+        
+        # Validate redirect target is same origin
+        parsed = urlparse(target_url)
+        if parsed.netloc:
+            # Check for same origin (scheme + netloc)
+            expected_scheme = self.request.protocol
+            expected_netloc = self.request.host
+            if parsed.scheme:
+                if parsed.scheme != expected_scheme or parsed.netloc != expected_netloc:
+                    raise web.HTTPError(403, "Redirect to untrusted site blocked")
+            else:
+                # Protocol-relative URL (//example.com) - treat as absolute with current scheme
+                if parsed.netloc != expected_netloc:
+                    raise web.HTTPError(403, "Redirect to untrusted site blocked")
+        
+        self.redirect(target_url, permanent=self._permanent)
 
 class PrometheusMetricsHandler(IPythonHandler):
     """

