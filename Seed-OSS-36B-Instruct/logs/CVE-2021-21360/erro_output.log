[PoC RESULT]: False
[PoC MSG]:
============================== Run PoC ==============================
------------------------------ Standard Output ------------------------------
============================= test session starts ==============================
platform linux -- Python 3.8.20, pytest-8.3.5, pluggy-1.5.0
rootdir: /workspace/Products.GenericSetup
collected 2 items

src/Products/GenericSetup/tests/test_tool.py .F                          [100%]

=================================== FAILURES ===================================
__________________ SetupToolTests.test_createSnapshot_default __________________

self = <Products.GenericSetup.tests.test_tool.SetupToolTests testMethod=test_createSnapshot_default>

    def test_createSnapshot_default(self):
        _EXPECTED = [
            ('import_steps.xml', _DEFAULT_STEP_REGISTRIES_IMPORT_XML),
            ('export_steps.xml', _DEFAULT_STEP_REGISTRIES_EXPORT_XML),
            ('rolemap.xml', 'dummy'),
            ('toolset.xml', 'dummy'),
        ]
    
        site = self._makeSite()
        site.setup_tool = self._makeOne('setup_tool')
        tool = site.setup_tool
        tool._import_registry.registerStep('foo', handler='foo.bar')
        tool._export_registry.registerStep(
            'step_registries',
            'Products.GenericSetup.tool.exportStepRegistries',
            'Export import / export steps.')
    
        self.assertEqual(len(tool.listSnapshotInfo()), 0)
    
        result = tool.createSnapshot('default')
    
        self.assertEqual(
            sorted(result['steps']),
            ['componentregistry', 'rolemap', 'step_registries', 'toolset'])
        self.assertEqual(result['messages']['step_registries'], None)
    
        snapshot = result['snapshot']
    
        self.assertEqual(len(snapshot.objectIds()), len(_EXPECTED))
    
        for id in [x[0] for x in _EXPECTED]:
            self.assertTrue(id in snapshot.objectIds())
    
        def normalize_xml(xml):
            # using this might mask a real problem on windows, but so far the
            # different newlines just caused problems in this test
            lines = [line.strip() for line in xml.splitlines() if line.strip()]
            return ' '.join(lines)
    
        fileobj = snapshot._getOb('import_steps.xml')
        self.assertEqual(normalize_xml(fileobj.read()),
                         normalize_xml(_DEFAULT_STEP_REGISTRIES_IMPORT_XML))
    
        fileobj = snapshot._getOb('export_steps.xml')
        self.assertEqual(normalize_xml(fileobj.read()),
                         normalize_xml(_DEFAULT_STEP_REGISTRIES_EXPORT_XML))
    
        self.assertEqual(len(tool.listSnapshotInfo()), 1)
    
        info = tool.listSnapshotInfo()[0]
    
        self.assertEqual(info['id'], 'default')
        self.assertEqual(info['title'], 'default')
    
        # Check access restriction on snapshot files and folders
>       self.check_restricted_access(tool.snapshots)

src/Products/GenericSetup/tests/test_tool.py:1110: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
src/Products/GenericSetup/tests/test_tool.py:482: in check_restricted_access
    self.assertEqual(allowed_roles, ['Manager', 'Owner'])
E   AssertionError: Lists differ: ['Manager'] != ['Manager', 'Owner']
E   
E   Second list contains 1 additional elements.
E   First extra element 1:
E   'Owner'
E   
E   - ['Manager']
E   + ['Manager', 'Owner']
=========================== short test summary info ============================
FAILED src/Products/GenericSetup/tests/test_tool.py::SetupToolTests::test_createSnapshot_default
========================= 1 failed, 1 passed in 1.30s ==========================

------------------------------ Finish Evaluation ------------------------------


[UnitTest RESULT]: None
[UnitTest MSG]:
 None

[Validation TYPE]: validation_fail