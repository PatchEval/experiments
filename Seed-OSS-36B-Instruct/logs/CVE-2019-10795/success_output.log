[PoC RESULT]: True
[PoC MSG]:
============================== Run PoC ==============================
------------------------------ Standard Output ------------------------------
TAP version 13
    # Subtest: test/misc.test.js
        # Subtest: cannot modify prototype chain
        ok 1 - should not be equal
        1..1
    ok 1 - cannot modify prototype chain # time=2.176ms

    1..1
    # time=5.935ms
ok 1 - test/misc.test.js # time=74.759ms

1..1
# time=78.46ms

------------------------------ Finish Evaluation ------------------------------


[UnitTest RESULT]: True
[UnitTest MSG]:
 ============================== Run Unit Test ==============================
------------------------------ Standard Output ------------------------------
TAP version 13
    # Subtest: test//array.test.js
        # Subtest: get specific array index
        ok 1 - should be equal
        1..1
    ok 1 - get specific array index # time=2.306ms

        # Subtest: set specific array index
        ok 1 - should be equivalent
        1..1
    ok 2 - set specific array index # time=0.858ms

    1..2
    # time=7.157ms
ok 1 - test//array.test.js # time=81.645ms

    # Subtest: test//set.test.js
        # Subtest: setting deep object values
        ok 1 - deep primitive changed
        1..1
    ok 1 - setting deep object values # time=2.133ms

        # Subtest: setting shallow object values
        ok 1 - shallow object changed
        1..1
    ok 2 - setting shallow object values # time=0.599ms

        # Subtest: undef value
        ok 1 - swapped undefined
        1..1
    ok 3 - undef value # time=0.613ms

        # Subtest: missing value
        ok 1 - target was not found
        ok 2 - shallow object changed
        1..2
    ok 4 - missing value # time=0.597ms

    1..4
    # time=8.355ms
ok 2 - test//set.test.js # time=72.896ms

    # Subtest: test//star-rule.test.js
        # Subtest: 2.0.0: match all.*
        ok 1 - should be equivalent
        1..1
    ok 1 - 2.0.0: match all.* # time=2.384ms

        # Subtest: 2.0.0: match all.*
        ok 1 - should be equivalent
        1..1
    ok 2 - 2.0.0: match all.* # time=0.667ms

        # Subtest: get value on first * selector
        ok 1 - should be equivalent
        1..1
    ok 3 - get value on first * selector # time=0.555ms

        # Subtest: walking multiple routes
        ok 1 - should be equal
        1..1
    ok 4 - walking multiple routes # time=0.505ms

        # Subtest: get specific match * selector
        ok 1 - should be equal
        1..1
    ok 5 - get specific match * selector # time=0.541ms

        # Subtest: match * selector returns undefined
        ok 1 - should be equal
        1..1
    ok 6 - match * selector returns undefined # time=0.485ms

        # Subtest: match * selector works on objects
        ok 1 - should be equal
        1..1
    ok 7 - match * selector works on objects # time=0.39ms

    1..7
    # time=11.334ms
ok 3 - test//star-rule.test.js # time=75.515ms

    # Subtest: test//undefsafe.test.js
        # Subtest: should handle primatives
        ok 1 - undefsafe is 1: 1
        1..1
    ok 1 - should handle primatives # time=2.139ms

        # Subtest: should handle null
        ok 1 - undefsafe works with null
        1..1
    ok 2 - should handle null # time=0.64ms

        # Subtest: should handle empty objects
        ok 1 - value is value[object Object]
        ok 2 - value.foo is undefined: undefined
        ok 3 - value.foo.bar is undefined: undefined
        1..3
    ok 3 - should handle empty objects # time=0.559ms

        # Subtest: should handle null properties
        ok 1 - value.a.b is null: null
        ok 2 - value.a.b.c is undefined: undefined
        1..2
    ok 4 - should handle null properties # time=0.639ms

        # Subtest: should find properties with periods in them
        ok 1 - a["one.two"]: true
        ok 2 - weird: true
        ok 3 - combo: true
        ok 4 - root: true
        1..4
    ok 5 - should find properties with periods in them # time=0.556ms

        # Subtest: should find deep object properties
        ok 1 - value.a: [object Object] [object Object]
        ok 2 - value.a.foo is undefined: undefined
        ok 3 - value.a.b.c.d = 10
        ok 4 - value.a.b.c.e = <object>
        ok 5 - bool(true)
        ok 6 - bool(false)
        ok 7 - undefined
        ok 8 - null
        1..8
    ok 6 - should find deep object properties # time=0.588ms

    1..6
    # time=10.791ms
ok 4 - test//undefsafe.test.js # time=76.346ms

1..4
# time=310.983ms

------------------------------ Finish Evaluation ------------------------------


[Validation TYPE]: Repair Success