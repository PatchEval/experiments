--- a/lib/hide-sensitive.js
+++ b/lib/hide-sensitive.js
@@ -11,7 +11,14 @@
     return /token|password|credential|secret|private/i.test(envVar) && size(env[envVar].trim()) >= SECRET_MIN_SIZE;
   });
 
-  const regexp = new RegExp(toReplace.map((envVar) => escapeRegExp(env[envVar])).join('|'), 'g');
+  // Create regex patterns for both original and URL-encoded secret values
+  const patterns = toReplace.flatMap((envVar) => {
+    const value = env[envVar];
+    const encodedValue = encodeURIComponent(value);
+    return [escapeRegExp(value), escapeRegExp(encodedValue)];
+  });
+  
+  const regexp = new RegExp(patterns.join('|'), 'g');
   return (output) =>
     output && isString(output) && toReplace.length > 0 ? output.toString().replace(regexp, SECRET_REPLACEMENT) : output;
 };

