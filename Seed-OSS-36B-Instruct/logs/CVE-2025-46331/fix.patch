--- a/internal/graph/cached_resolver.go
+++ b/internal/graph/cached_resolver.go
@@ -156,12 +156,15 @@
 		checkCacheTotalCounter.Inc()
 		if cachedResp := c.cache.Get(cacheKey); cachedResp != nil {
 			res := cachedResp.(*CheckResponseCacheEntry)
-			isValid := res.LastModified.After(req.LastCacheInvalidationTime)
+			// Validate both timestamp and authorization model ID to prevent cross-model cache contamination
+			isValid := res.LastModified.After(req.LastCacheInvalidationTime) && 
+						res.CheckResponse.AuthorizationModelID == req.GetAuthorizationModelID()
 			c.logger.Debug("CachedCheckResolver found cache key",
 				zap.String("store_id", req.GetStoreID()),
 				zap.String("authorization_model_id", req.GetAuthorizationModelID()),
 				zap.String("tuple_key", req.GetTupleKey().String()),
-				zap.Bool("isValid", isValid))
+				zap.Bool("isValid", isValid),
+				zap.String("cached_model_id", res.CheckResponse.AuthorizationModelID))
 
 			span.SetAttributes(attribute.Bool("cached", isValid))
 			if isValid {
@@ -195,11 +198,9 @@
 
 func BuildCacheKey(req ResolveCheckRequest) string {
 	tup := tuple.From(req.GetTupleKey())
-	cacheKeyString := tup.String() + req.GetInvariantCacheKey()
+	cacheKeyString := req.GetAuthorizationModelID() + tup.String() + req.GetInvariantCacheKey()
 
 	hasher := xxhash.New()
-
-	// Digest.WriteString returns int and a nil error, ignoring
 	_, _ = hasher.WriteString(cacheKeyString)
 
 	return strconv.FormatUint(hasher.Sum64(), 10)

