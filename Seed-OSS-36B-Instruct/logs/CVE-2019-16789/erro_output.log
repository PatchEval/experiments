[PoC RESULT]: False
[PoC MSG]:
============================== Run PoC ==============================
------------------------------ Standard Output ------------------------------
============================= test session starts ==============================
platform linux -- Python 3.7.16, pytest-7.4.4, pluggy-1.2.0 -- /workspace/PoC_env/CVE-2019-16789/bin/python
cachedir: .pytest_cache
rootdir: /workspace/waitress
collecting ... collected 60 items / 52 deselected / 8 selected

waitress/tests/test_parser.py::TestHTTPRequestParser::test_parse_header_empty PASSED [ 12%]
waitress/tests/test_parser.py::TestHTTPRequestParser::test_parse_header_invalid_chars FAILED [ 25%]
waitress/tests/test_parser.py::TestHTTPRequestParser::test_parse_header_invalid_folding_spacing FAILED [ 37%]
waitress/tests/test_parser.py::TestHTTPRequestParser::test_parse_header_invalid_no_colon FAILED [ 50%]
waitress/tests/test_parser.py::TestHTTPRequestParser::test_parse_header_invalid_whitespace_vtab FAILED [ 62%]
waitress/tests/test_parser.py::TestHTTPRequestParser::test_parse_header_multiple_values PASSED [ 75%]
waitress/tests/test_parser.py::TestHTTPRequestParser::test_parse_header_multiple_values_header_folded PASSED [ 87%]
waitress/tests/test_parser.py::TestHTTPRequestParser::test_parse_header_multiple_values_header_folded_multiple PASSED [100%]

=================================== FAILURES ===================================
____________ TestHTTPRequestParser.test_parse_header_invalid_chars _____________

self = <waitress.tests.test_parser.TestHTTPRequestParser testMethod=test_parse_header_invalid_chars>

    def test_parse_header_invalid_chars(self):
        from waitress.parser import ParsingError
    
        data = b"GET /foobar HTTP/1.1\r\nfoo: bar\r\n\foo: \x0bbaz\r\n"
        try:
>           self.parser.parse_header(data)

waitress/tests/test_parser.py:353: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <waitress.parser.HTTPRequestParser object at 0x7f6033286310>
header_plus = b'GET /foobar HTTP/1.1\r\nfoo: bar\r\n\x0coo: \x0bbaz\r\n'

    def parse_header(self, header_plus):
        """
        Parses the header_plus block of text (the headers plus the
        first line of the request).
        """
        index = header_plus.find(b"\r\n")
        if index >= 0:
            first_line = header_plus[:index].rstrip()
            header = header_plus[index + 2 :]
        else:
            raise ParsingError("HTTP message header invalid")
    
        if b"\r" in first_line or b"\n" in first_line:
            raise ParsingError("Bare CR or LF found in HTTP message")
    
        self.first_line = first_line  # for testing
    
        lines = get_header_lines(header)
    
        headers = self.headers
        for line in lines:
            index = line.find(b":")
            if index > 0:
                key = line[:index]
    
                if key != key.strip():
>                   raise ParsingError("Invalid whitespace after field-name")
E                   waitress.parser.ParsingError: Invalid whitespace after field-name

waitress/parser.py:219: ParsingError

During handling of the above exception, another exception occurred:

self = <waitress.tests.test_parser.TestHTTPRequestParser testMethod=test_parse_header_invalid_chars>

    def test_parse_header_invalid_chars(self):
        from waitress.parser import ParsingError
    
        data = b"GET /foobar HTTP/1.1\r\nfoo: bar\r\n\foo: \x0bbaz\r\n"
        try:
            self.parser.parse_header(data)
        except ParsingError as e:
>           self.assertIn("Invalid header", e.args[0])
E           AssertionError: 'Invalid header' not found in 'Invalid whitespace after field-name'

waitress/tests/test_parser.py:355: AssertionError
_______ TestHTTPRequestParser.test_parse_header_invalid_folding_spacing ________

self = <waitress.tests.test_parser.TestHTTPRequestParser testMethod=test_parse_header_invalid_folding_spacing>

    def test_parse_header_invalid_folding_spacing(self):
        from waitress.parser import ParsingError
    
        data = b"GET /foobar HTTP/1.1\r\nfoo: bar\r\n\t\x0bbaz\r\n"
        try:
            self.parser.parse_header(data)
        except ParsingError as e:
            self.assertIn("Invalid header", e.args[0])
        else:  # pragma: nocover
>           self.assertTrue(False)
E           AssertionError: False is not true

waitress/tests/test_parser.py:346: AssertionError
___________ TestHTTPRequestParser.test_parse_header_invalid_no_colon ___________

self = <waitress.tests.test_parser.TestHTTPRequestParser testMethod=test_parse_header_invalid_no_colon>

    def test_parse_header_invalid_no_colon(self):
        from waitress.parser import ParsingError
    
        data = b"GET /foobar HTTP/1.1\r\nfoo: bar\r\nnotvalid\r\n"
        try:
            self.parser.parse_header(data)
        except ParsingError as e:
            self.assertIn("Invalid header", e.args[0])
        else:  # pragma: nocover
>           self.assertTrue(False)
E           AssertionError: False is not true

waitress/tests/test_parser.py:335: AssertionError
_______ TestHTTPRequestParser.test_parse_header_invalid_whitespace_vtab ________

self = <waitress.tests.test_parser.TestHTTPRequestParser testMethod=test_parse_header_invalid_whitespace_vtab>

    def test_parse_header_invalid_whitespace_vtab(self):
        from waitress.parser import ParsingError
    
        data = b"GET /foobar HTTP/1.1\r\nfoo:\x0bbar\r\n"
        try:
            self.parser.parse_header(data)
        except ParsingError as e:
            self.assertIn("Invalid header", e.args[0])
        else:  # pragma: nocover
>           self.assertTrue(False)
E           AssertionError: False is not true

waitress/tests/test_parser.py:324: AssertionError
=========================== short test summary info ============================
FAILED waitress/tests/test_parser.py::TestHTTPRequestParser::test_parse_header_invalid_chars
FAILED waitress/tests/test_parser.py::TestHTTPRequestParser::test_parse_header_invalid_folding_spacing
FAILED waitress/tests/test_parser.py::TestHTTPRequestParser::test_parse_header_invalid_no_colon
FAILED waitress/tests/test_parser.py::TestHTTPRequestParser::test_parse_header_invalid_whitespace_vtab
============ 4 failed, 4 passed, 52 deselected, 8 warnings in 0.13s ============

------------------------------ Finish Evaluation ------------------------------


[UnitTest RESULT]: None
[UnitTest MSG]:
 None

[Validation TYPE]: validation_fail