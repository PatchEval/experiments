[PoC RESULT]: False
[PoC MSG]:
============================== Run PoC ==============================
------------------------------ Standard Output ------------------------------
TAP version 13
# Subtest: A route could support multiple versions (find) / 1
    1..7
    not ok 1 - expect truthy value
      ---
      at:
        line: 16
        column: 5
        file: test/version.default-versioning.test.js
        type: Test
      stack: |
        Test.<anonymous> (test/version.default-versioning.test.js:16:5)
        Object.<anonymous> (test/version.default-versioning.test.js:8:1)
      source: |2
      
          t.ok(findMyWay.find('GET', '/', '1.x'))
        ----^
          t.ok(findMyWay.find('GET', '/', '1.2.3'))
          t.ok(findMyWay.find('GET', '/', '3.x'))
      ...
    
    not ok 2 - expect truthy value
      ---
      at:
        line: 17
        column: 5
        file: test/version.default-versioning.test.js
        type: Test
      stack: |
        Test.<anonymous> (test/version.default-versioning.test.js:17:5)
        Object.<anonymous> (test/version.default-versioning.test.js:8:1)
      source: |2
          t.ok(findMyWay.find('GET', '/', '1.x'))
          t.ok(findMyWay.find('GET', '/', '1.2.3'))
        ----^
          t.ok(findMyWay.find('GET', '/', '3.x'))
          t.ok(findMyWay.find('GET', '/', '3.2.0'))
      ...
    
    not ok 3 - expect truthy value
      ---
      at:
        line: 18
        column: 5
        file: test/version.default-versioning.test.js
        type: Test
      stack: |
        Test.<anonymous> (test/version.default-versioning.test.js:18:5)
        Object.<anonymous> (test/version.default-versioning.test.js:8:1)
      source: |2
          t.ok(findMyWay.find('GET', '/', '1.2.3'))
          t.ok(findMyWay.find('GET', '/', '3.x'))
        ----^
          t.ok(findMyWay.find('GET', '/', '3.2.0'))
          t.notOk(findMyWay.find('GET', '/', '2.x'))
      ...
    
    not ok 4 - expect truthy value
      ---
      at:
        line: 19
        column: 5
        file: test/version.default-versioning.test.js
        type: Test
      stack: |
        Test.<anonymous> (test/version.default-versioning.test.js:19:5)
        Object.<anonymous> (test/version.default-versioning.test.js:8:1)
      source: |2
          t.ok(findMyWay.find('GET', '/', '3.x'))
          t.ok(findMyWay.find('GET', '/', '3.2.0'))
        ----^
          t.notOk(findMyWay.find('GET', '/', '2.x'))
          t.notOk(findMyWay.find('GET', '/', '2.3.4'))
      ...
    
    ok 5 - expect falsey value
    ok 6 - expect falsey value
    ok 7 - expect falsey value
    # failed 4 of 7 tests
not ok 1 - A route could support multiple versions (find) / 1 # time=24.937ms

# Subtest: A route could support multiple versions (find) / 2
    1..7
    not ok 1 - expect truthy value
      ---
      at:
        line: 33
        column: 5
        file: test/version.default-versioning.test.js
        type: Test
      stack: |
        Test.<anonymous> (test/version.default-versioning.test.js:33:5)
        Object.<anonymous> (test/version.default-versioning.test.js:25:1)
      source: |2
      
          t.ok(findMyWay.find('GET', '/test', '1.x'))
        ----^
          t.ok(findMyWay.find('GET', '/test', '1.2.3'))
          t.ok(findMyWay.find('GET', '/test', '3.x'))
      ...
    
    not ok 2 - expect truthy value
      ---
      at:
        line: 34
        column: 5
        file: test/version.default-versioning.test.js
        type: Test
      stack: |
        Test.<anonymous> (test/version.default-versioning.test.js:34:5)
        Object.<anonymous> (test/version.default-versioning.test.js:25:1)
      source: |2
          t.ok(findMyWay.find('GET', '/test', '1.x'))
          t.ok(findMyWay.find('GET', '/test', '1.2.3'))
        ----^
          t.ok(findMyWay.find('GET', '/test', '3.x'))
          t.ok(findMyWay.find('GET', '/test', '3.2.0'))
      ...
    
    not ok 3 - expect truthy value
      ---
      at:
        line: 35
        column: 5
        file: test/version.default-versioning.test.js
        type: Test
      stack: |
        Test.<anonymous> (test/version.default-versioning.test.js:35:5)
        Object.<anonymous> (test/version.default-versioning.test.js:25:1)
      source: |2
          t.ok(findMyWay.find('GET', '/test', '1.2.3'))
          t.ok(findMyWay.find('GET', '/test', '3.x'))
        ----^
          t.ok(findMyWay.find('GET', '/test', '3.2.0'))
          t.notOk(findMyWay.find('GET', '/test', '2.x'))
      ...
    
    not ok 4 - expect truthy value
      ---
      at:
        line: 36
        column: 5
        file: test/version.default-versioning.test.js
        type: Test
      stack: |
        Test.<anonymous> (test/version.default-versioning.test.js:36:5)
        Object.<anonymous> (test/version.default-versioning.test.js:25:1)
      source: |2
          t.ok(findMyWay.find('GET', '/test', '3.x'))
          t.ok(findMyWay.find('GET', '/test', '3.2.0'))
        ----^
          t.notOk(findMyWay.find('GET', '/test', '2.x'))
          t.notOk(findMyWay.find('GET', '/test', '2.3.4'))
      ...
    
    ok 5 - expect falsey value
    ok 6 - expect falsey value
    ok 7 - expect falsey value
    # failed 4 of 7 tests
not ok 2 - A route could support multiple versions (find) / 2 # time=10.675ms

# Subtest: A route could support multiple versions (find) / 3
    1..10
    not ok 1 - expect truthy value
      ---
      at:
        line: 51
        column: 5
        file: test/version.default-versioning.test.js
        type: Test
      stack: |
        Test.<anonymous> (test/version.default-versioning.test.js:51:5)
        Object.<anonymous> (test/version.default-versioning.test.js:42:1)
      source: |2
      
          t.ok(findMyWay.find('GET', '/test/1234/hello', '1.x'))
        ----^
          t.ok(findMyWay.find('GET', '/test/1234/hello', '1.2.3'))
          t.ok(findMyWay.find('GET', '/test/1234/hello', '3.x'))
      ...
    
    not ok 2 - expect truthy value
      ---
      at:
        line: 52
        column: 5
        file: test/version.default-versioning.test.js
        type: Test
      stack: |
        Test.<anonymous> (test/version.default-versioning.test.js:52:5)
        Object.<anonymous> (test/version.default-versioning.test.js:42:1)
      source: |2
          t.ok(findMyWay.find('GET', '/test/1234/hello', '1.x'))
          t.ok(findMyWay.find('GET', '/test/1234/hello', '1.2.3'))
        ----^
          t.ok(findMyWay.find('GET', '/test/1234/hello', '3.x'))
          t.ok(findMyWay.find('GET', '/test/1234/hello', '3.2.0'))
      ...
    
    not ok 3 - expect truthy value
      ---
      at:
        line: 53
        column: 5
        file: test/version.default-versioning.test.js
        type: Test
      stack: |
        Test.<anonymous> (test/version.default-versioning.test.js:53:5)
        Object.<anonymous> (test/version.default-versioning.test.js:42:1)
      source: |2
          t.ok(findMyWay.find('GET', '/test/1234/hello', '1.2.3'))
          t.ok(findMyWay.find('GET', '/test/1234/hello', '3.x'))
        ----^
          t.ok(findMyWay.find('GET', '/test/1234/hello', '3.2.0'))
          t.ok(findMyWay.find('GET', '/test/name/hello', '4.x'))
      ...
    
    not ok 4 - expect truthy value
      ---
      at:
        line: 54
        column: 5
        file: test/version.default-versioning.test.js
        type: Test
      stack: |
        Test.<anonymous> (test/version.default-versioning.test.js:54:5)
        Object.<anonymous> (test/version.default-versioning.test.js:42:1)
      source: |2
          t.ok(findMyWay.find('GET', '/test/1234/hello', '3.x'))
          t.ok(findMyWay.find('GET', '/test/1234/hello', '3.2.0'))
        ----^
          t.ok(findMyWay.find('GET', '/test/name/hello', '4.x'))
          t.ok(findMyWay.find('GET', '/test/name/hello', '3.x'))
      ...
    
    not ok 5 - expect truthy value
      ---
      at:
        line: 55
        column: 5
        file: test/version.default-versioning.test.js
        type: Test
      stack: |
        Test.<anonymous> (test/version.default-versioning.test.js:55:5)
        Object.<anonymous> (test/version.default-versioning.test.js:42:1)
      source: |2
          t.ok(findMyWay.find('GET', '/test/1234/hello', '3.2.0'))
          t.ok(findMyWay.find('GET', '/test/name/hello', '4.x'))
        ----^
          t.ok(findMyWay.find('GET', '/test/name/hello', '3.x'))
          t.notOk(findMyWay.find('GET', '/test/1234/hello', '2.x'))
      ...
    
    not ok 6 - expect truthy value
      ---
      at:
        line: 56
        column: 5
        file: test/version.default-versioning.test.js
        type: Test
      stack: |
        Test.<anonymous> (test/version.default-versioning.test.js:56:5)
        Object.<anonymous> (test/version.default-versioning.test.js:42:1)
      source: |2
          t.ok(findMyWay.find('GET', '/test/name/hello', '4.x'))
          t.ok(findMyWay.find('GET', '/test/name/hello', '3.x'))
        ----^
          t.notOk(findMyWay.find('GET', '/test/1234/hello', '2.x'))
          t.notOk(findMyWay.find('GET', '/test/1234/hello', '2.3.4'))
      ...
    
    ok 7 - expect falsey value
    ok 8 - expect falsey value
    ok 9 - expect falsey value
    ok 10 - expect falsey value
    # failed 6 of 10 tests
not ok 3 - A route could support multiple versions (find) / 3 # time=13.419ms

# Subtest: A route could support multiple versions (find) / 4
    1..8
    not ok 1 - expect truthy value
      ---
      at:
        line: 71
        column: 5
        file: test/version.default-versioning.test.js
        type: Test
      stack: |
        Test.<anonymous> (test/version.default-versioning.test.js:71:5)
        Object.<anonymous> (test/version.default-versioning.test.js:63:1)
      source: |2
      
          t.ok(findMyWay.find('GET', '/test/1234/hello', '1.x'))
        ----^
          t.ok(findMyWay.find('GET', '/test/1234/hello', '1.2.3'))
          t.ok(findMyWay.find('GET', '/test/hello', '3.x'))
      ...
    
    not ok 2 - expect truthy value
      ---
      at:
        line: 72
        column: 5
        file: test/version.default-versioning.test.js
        type: Test
      stack: |
        Test.<anonymous> (test/version.default-versioning.test.js:72:5)
        Object.<anonymous> (test/version.default-versioning.test.js:63:1)
      source: |2
          t.ok(findMyWay.find('GET', '/test/1234/hello', '1.x'))
          t.ok(findMyWay.find('GET', '/test/1234/hello', '1.2.3'))
        ----^
          t.ok(findMyWay.find('GET', '/test/hello', '3.x'))
          t.ok(findMyWay.find('GET', '/test/hello', '3.2.0'))
      ...
    
    not ok 3 - expect truthy value
      ---
      at:
        line: 73
        column: 5
        file: test/version.default-versioning.test.js
        type: Test
      stack: |
        Test.<anonymous> (test/version.default-versioning.test.js:73:5)
        Object.<anonymous> (test/version.default-versioning.test.js:63:1)
      source: |2
          t.ok(findMyWay.find('GET', '/test/1234/hello', '1.2.3'))
          t.ok(findMyWay.find('GET', '/test/hello', '3.x'))
        ----^
          t.ok(findMyWay.find('GET', '/test/hello', '3.2.0'))
          t.notOk(findMyWay.find('GET', '/test/1234/hello', '3.2.0'))
      ...
    
    not ok 4 - expect truthy value
      ---
      at:
        line: 74
        column: 5
        file: test/version.default-versioning.test.js
        type: Test
      stack: |
        Test.<anonymous> (test/version.default-versioning.test.js:74:5)
        Object.<anonymous> (test/version.default-versioning.test.js:63:1)
      source: |2
          t.ok(findMyWay.find('GET', '/test/hello', '3.x'))
          t.ok(findMyWay.find('GET', '/test/hello', '3.2.0'))
        ----^
          t.notOk(findMyWay.find('GET', '/test/1234/hello', '3.2.0'))
          t.notOk(findMyWay.find('GET', '/test/1234/hello', '3.x'))
      ...
    
    ok 5 - expect falsey value
    ok 6 - expect falsey value
    ok 7 - expect falsey value
    ok 8 - expect falsey value
    # failed 4 of 8 tests
not ok 4 - A route could support multiple versions (find) / 4 # time=7.487ms

# Subtest: A route could support multiple versions (find) / 5
    1..1
    not ok 1 - Cannot read properties of null (reading 'handler')
      ---
      stack: |
        Test.<anonymous> (test/version.default-versioning.test.js:89:39)
      at:
        line: 89
        column: 39
        file: test/version.default-versioning.test.js
        function: Test.<anonymous>
      type: TypeError
      tapCaught: testFunctionThrow
      test: A route could support multiple versions (find) / 5
      source: |2
      
          t.ok(findMyWay.find('GET', '/', '*').handler())
        --------------------------------------^
        })
      ...
    
    # failed 1 test
not ok 5 - A route could support multiple versions (find) / 5 # time=4.125ms

# Subtest: Find with a version but without versioned routes
    1..1
    not ok 1 - expect falsey value
      ---
      at:
        line: 99
        column: 5
        file: test/version.default-versioning.test.js
        type: Test
      stack: |
        Test.<anonymous> (test/version.default-versioning.test.js:99:5)
        Object.<anonymous> (test/version.default-versioning.test.js:92:1)
      source: |2
      
          t.notOk(findMyWay.find('GET', '/', '1.x'))
        ----^
        })
      ...
    
    # failed 1 test
not ok 6 - Find with a version but without versioned routes # time=2.093ms

# Subtest: A route could support multiple versions (lookup)
    1..7
    not ok 1 - expect truthy value
      ---
      at:
        line: 108
        column: 9
        file: test/version.default-versioning.test.js
        type: Router
        function: defaultRoute
      stack: |
        Router.defaultRoute (test/version.default-versioning.test.js:108:9)
        Router._defaultRoute (index.js:604:14)
        Router.lookup (index.js:370:36)
        Test.<anonymous> (test/version.default-versioning.test.js:122:13)
        Object.<anonymous> (test/version.default-versioning.test.js:102:1)
      source: |2
              const versions = ['2.x', '2.3.4', '3.2.1']
              t.ok(versions.indexOf(req.headers['accept-version']) > -1)
        --------^
            }
          })
      ...
    
    not ok 2 - expect truthy value
      ---
      at:
        line: 108
        column: 9
        file: test/version.default-versioning.test.js
        type: Router
        function: defaultRoute
      stack: |
        Router.defaultRoute (test/version.default-versioning.test.js:108:9)
        Router._defaultRoute (index.js:604:14)
        Router.lookup (index.js:370:36)
        Test.<anonymous> (test/version.default-versioning.test.js:128:13)
        Object.<anonymous> (test/version.default-versioning.test.js:102:1)
      source: |2
              const versions = ['2.x', '2.3.4', '3.2.1']
              t.ok(versions.indexOf(req.headers['accept-version']) > -1)
        --------^
            }
          })
      ...
    
    not ok 3 - expect truthy value
      ---
      at:
        line: 108
        column: 9
        file: test/version.default-versioning.test.js
        type: Router
        function: defaultRoute
      stack: |
        Router.defaultRoute (test/version.default-versioning.test.js:108:9)
        Router._defaultRoute (index.js:604:14)
        Router.lookup (index.js:370:36)
        Test.<anonymous> (test/version.default-versioning.test.js:134:13)
        Object.<anonymous> (test/version.default-versioning.test.js:102:1)
      source: |2
              const versions = ['2.x', '2.3.4', '3.2.1']
              t.ok(versions.indexOf(req.headers['accept-version']) > -1)
        --------^
            }
          })
      ...
    
    not ok 4 - expect truthy value
      ---
      at:
        line: 108
        column: 9
        file: test/version.default-versioning.test.js
        type: Router
        function: defaultRoute
      stack: |
        Router.defaultRoute (test/version.default-versioning.test.js:108:9)
        Router._defaultRoute (index.js:604:14)
        Router.lookup (index.js:370:36)
        Test.<anonymous> (test/version.default-versioning.test.js:140:13)
        Object.<anonymous> (test/version.default-versioning.test.js:102:1)
      source: |2
              const versions = ['2.x', '2.3.4', '3.2.1']
              t.ok(versions.indexOf(req.headers['accept-version']) > -1)
        --------^
            }
          })
      ...
    
    ok 5 - expect truthy value
    ok 6 - expect truthy value
    ok 7 - expect truthy value
    # failed 4 of 7 tests
not ok 7 - A route could support multiple versions (lookup) # time=8.224ms

# Subtest: It should always choose the highest version of a route
    1..3
    not ok 1 - Cannot set properties of null (setting 'statusCode')
      ---
      stack: |
        Router._defaultRoute (index.js:607:20)
        Router.lookup (index.js:370:36)
        Test.<anonymous> (test/version.default-versioning.test.js:198:13)
      at:
        line: 607
        column: 20
        file: index.js
        function: Router._defaultRoute
      type: TypeError
      tapCaught: testFunctionThrow
      test: It should always choose the highest version of a route
      source: |2
          } else {
            res.statusCode = 404
        -------------------^
            res.end()
          }
      ...
    
    # test count(1) != plan(3)
    # failed 1 test
not ok 8 - It should always choose the highest version of a route # time=2.327ms

# Subtest: Declare the same route with and without version
    1..2
    ok 1 - expect truthy value
    ok 2 - expect truthy value
ok 9 - Declare the same route with and without version # time=0.505ms

# Subtest: It should throw if you declare multiple times the same route
    1..1
    not ok 1 - It should throw
      ---
      at:
        line: 238
        column: 7
        file: test/version.default-versioning.test.js
        type: Test
      stack: |
        Test.<anonymous> (test/version.default-versioning.test.js:238:7)
        Object.<anonymous> (test/version.default-versioning.test.js:229:1)
      source: >2
            findMyWay.on('GET', '/', { version: '1.2.3' }, noop)
            t.fail('It should throw')
        ------^
          } catch (err) {
            t.is(err.message, 'Method \'GET\' already declared for route \'/\' version \'1.2.3\'')
      ...
    
    # failed 1 test
not ok 10 - It should throw if you declare multiple times the same route # time=2.48ms

# Subtest: Versioning won't work if there are no versioned routes
    1..2
    ok 1 - Yeah!
    ok 2 - Yeah!
ok 11 - Versioning won't work if there are no versioned routes # time=0.39ms

1..11
# failed 9 of 11 tests
# time=98.58ms

------------------------------ Finish Evaluation ------------------------------


[UnitTest RESULT]: None
[UnitTest MSG]:
 None

[Validation TYPE]: compilation_fail