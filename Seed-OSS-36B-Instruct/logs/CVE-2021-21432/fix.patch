--- a/source/github/authentication.go
+++ b/source/github/authentication.go
@@ -9,6 +9,7 @@
 	"errors"
 	"fmt"
 	"net/http"
+	"strings"
 
 	"github.com/go-vela/server/random"
 
@@ -105,9 +106,19 @@
 func (c *client) AuthenticateToken(r *http.Request) (*library.User, error) {
 	logrus.Trace("Authenticating user via token")
 
-	token := r.Header.Get("Token")
+	authHeader := r.Header.Get("Authorization")
+	if len(authHeader) == 0 {
+		return nil, errors.New("no authorization header provided")
+	}
+
+	parts := strings.Split(authHeader, " ")
+	if len(parts) != 2 || parts[0] != "Bearer" {
+		return nil, errors.New("invalid authorization header format - expected 'Bearer <token>'")
+	}
+
+	token := parts[1]
 	if len(token) == 0 {
-		return nil, errors.New("no token provided")
+		return nil, errors.New("no token provided in authorization header")
 	}
 
 	u, err := c.Authorize(token)

